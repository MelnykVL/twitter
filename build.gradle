plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version '5.0.0.4638'
    id 'jacoco'
}

group = 'dev.petproject'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

application {
    mainClass.set('dev.petproject.twitter.TwitterApplication')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.hibernate.orm:hibernate-jpamodelgen'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000/'
        property 'sonar.login', System.getenv("SONAR_TOKEN")
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn test // tests are required to run before generating the report
}